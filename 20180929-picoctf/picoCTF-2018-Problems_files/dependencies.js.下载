// Generated by CoffeeScript 1.12.7
var getStyle;

this.apiCall = function(type, url, data) {
  if (type === "POST") {
    data.token = $.cookie("token");
  }
  return $.ajax({
    url: url,
    type: type,
    data: data,
    cache: false
  }).fail(function(jqXHR, text) {
    ga('send', 'event', 'Error', 'APIOffline', url);
    return $.notify("The server is currently down. We will work to fix this error right away.", "error");
  }).success(function(resp) {
    if (url === "/api/user/status" && resp.status === 1) {
      return window.userStatus = resp.data;
    }
  });
};

this.redirectIfNotLoggedIn = function() {
  return apiCall("GET", "/api/user/status", {}).done(function(data) {
    switch (data["status"]) {
      case 1:
        if (!data.data["logged_in"]) {
          ga('send', 'event', 'Redirect', 'NotLoggedIn');
          return window.location.href = "/";
        }
    }
  });
};

this.redirectIfLoggedIn = function() {
  return apiCall("GET", "/api/user/status", {}).done(function(data) {
    switch (data["status"]) {
      case 1:
        if (data.data["logged_in"]) {
          ga('send', 'event', 'Redirect', 'LoggedIn');
          return window.location.href = "/news";
        }
    }
  });
};

this.redirectIfTeacher = function() {
  return apiCall("GET", "/api/user/status", {}).done(function(data) {
    switch (data["status"]) {
      case 1:
        if (data.data["teacher"]) {
          ga('send', 'event', 'Redirect', 'Teacher');
          return window.location.href = "/classroom";
        }
    }
  });
};

this.redirectIfNotTeacher = function() {
  return apiCall("GET", "/api/user/status", {}).done(function(data) {
    switch (data["status"]) {
      case 1:
        if (!data.data["teacher"]) {
          return window.location.href = "/";
        }
    }
  });
};

this.redirectIfNotAdmin = function() {
  return apiCall("GET", "/api/user/status", {}).done(function(data) {
    switch (data["status"]) {
      case 1:
        if (!data.data["admin"]) {
          ga('send', 'event', 'Redirect', 'Admin');
          return window.location.href = "/";
        }
    }
  });
};

getStyle = function(data) {
  var style;
  style = "info";
  switch (data.status) {
    case 0:
      style = "error";
      break;
    case 1:
      style = "success";
  }
  return style;
};

this.apiNotify = function(data, redirect) {
  var style;
  style = getStyle(data);
  $.notify(data.message, style);
  if (redirect && data.status === 1) {
    return setTimeout((function() {
      return window.location = redirect;
    }), 1000);
  }
};

this.apiNotifyElement = function(elt, data, redirect) {
  var style;
  style = getStyle(data);
  elt.notify(data.message, style);
  if (redirect && data.status === 1) {
    return setTimeout((function() {
      return window.location = redirect;
    }), 1000);
  }
};

this.numericalSort = function(data) {
  return data.sort(function(a, b) {
    return b - a;
  });
};

this.confirmDialog = function(message, title, yesButton, noButton, yesEvent, noEvent) {
  var dialog_content, renderDialogModal;
  renderDialogModal = _.template($("#modal-template").html());
  dialog_content = renderDialogModal({
    message: message,
    title: title,
    yesButton: yesButton,
    noButton: noButton,
    submitButton: ""
  });
  $("#modal-holder").html(dialog_content);
  return $("#confirm-modal").modal({
    backdrop: "static",
    keyboard: false
  }).one("click", "#modal-yes-button", yesEvent).one("click", "#modal-no-button", noEvent);
};

this.messageDialog = function(message, title, button, event) {
  var dialog_content, renderDialogModal;
  renderDialogModal = _.template($("#modal-template").html());
  dialog_content = renderDialogModal({
    message: message,
    title: title,
    yesButton: button,
    noButton: "",
    submitButton: ""
  });
  $("#modal-holder").html(dialog_content);
  return $("#confirm-modal").modal({
    backdrop: "static",
    keyboard: false
  }).one("click", "#modal-yes-button", event);
};

this.formDialog = function(message, title, button, defaultFocus, event) {
  var dialog_content, renderDialogModal;
  renderDialogModal = _.template($("#modal-template").html());
  dialog_content = renderDialogModal({
    message: message,
    title: title,
    yesButton: "",
    noButton: "",
    submitButton: button
  });
  $("#modal-holder").html(dialog_content);
  return $("#confirm-modal").modal({
    backdrop: "static",
    keyboard: false
  }).on('shown.bs.modal', function() {
    return $("#" + defaultFocus).focus();
  }).on("click", "#modal-submit-button", event);
};

this.closeDialog = function() {
  return $('#confirm-modal').modal('hide');
};

this.logout = function() {
  return apiCall("GET", "/api/user/logout").done(function(data) {
    switch (data['status']) {
      case 1:
        ga('send', 'event', 'Authentication', 'LogOut', 'Success');
        return document.location.href = "/";
      case 0:
        ga('send', 'event', 'Authentication', 'LogOut', 'Failure::' + data.message);
        return document.location.href = "/";
    }
  });
};

$.fn.apiNotify = function(data, configuration) {
  configuration["className"] = getStyle(data);
  return $(this).notify(data.message, configuration);
};

$.fn.serializeObject = function() {
  var a, o;
  o = {};
  a = this.serializeArray();
  $.each(a, function() {
    if (o[this.name]) {
      if (!o[this.name].push) {
        o[this.name] = [o[this.name]];
      }
      return o[this.name].push(this.value || '');
    } else {
      return o[this.name] = this.value || '';
    }
  });
  return o;
};

$(function() {
  return apiCall("GET", "/api/user/status", {}).done(function(data) {
    return document.competition_status = data.data;
  });
});
